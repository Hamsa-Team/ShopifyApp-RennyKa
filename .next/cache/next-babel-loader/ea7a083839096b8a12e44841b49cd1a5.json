{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Router from \"next/router\";\nimport { useMutation, gql } from '@apollo/client';\nexport default function Login() {\n  const {\n    0: username,\n    1: setUsername\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: mess,\n    1: setMess\n  } = useState('');\n  const LOGIN = gql`\n    mutation login($username: String, $password: String) {\n            login(user: {\n                        username: $username,\n                        password: $password\n                        }\n                )\n                         {\n    mess\n  }\n}\n    `;\n  const [addTodo] = useMutation(LOGIN);\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // await axios.post('login', {\n    //     username: username,\n    //     password: password\n    // }).then(res => {\n    //     setMess(res.data);\n    //     Router.replace(\"/employees\");\n    // }).catch(rej => {\n    //     setMess('Wrong username or password, please check again!')\n    // });\n    // console.log(username, password, 'aaaaaa', addTodo());\n\n    await addTodo({\n      variables: {\n        username: username,\n        password: password\n      }\n    }).then(res => {\n      setMess(res.data.login.mess);\n      setUsername('');\n      setPassword(''); // Router.replace(\"/employees\");\n    });\n  };\n\n  return __jsx(\"div\", null, __jsx(\"label\", null, \"Username\"), __jsx(\"br\", null), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter username\",\n    value: username,\n    onChange: event => setUsername(event.target.value)\n  }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"label\", null, \"Password\"), __jsx(\"br\", null), __jsx(\"input\", {\n    type: \"password\",\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    placeholder: \"Enter password\"\n  }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"p\", {\n    style: {\n      color: \"red\"\n    }\n  }, mess), __jsx(\"button\", {\n    type: \"submit\",\n    onClick: handleSubmit\n  }, \"Login\"));\n}","map":{"version":3,"sources":["/home/hamsa/training/GraphQL-RennyKa/pages/login.js"],"names":["React","useState","Router","useMutation","gql","Login","username","setUsername","password","setPassword","mess","setMess","LOGIN","addTodo","handleSubmit","event","preventDefault","variables","then","res","data","login","target","value","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAiC,gBAAjC;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC5B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACS,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMW,KAAK,GAAGR,GAAI;;;;;;;;;;;KAAlB;AAYA,QAAM,CAACS,OAAD,IAAYV,WAAW,CAACS,KAAD,CAA7B;;AAEA,QAAME,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACC,cAAN,GADkC,CAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMH,OAAO,CAAC;AACVI,MAAAA,SAAS,EAAE;AACPX,QAAAA,QAAQ,EAAEA,QADH;AAEPE,QAAAA,QAAQ,EAAEA;AAFH;AADD,KAAD,CAAP,CAKHU,IALG,CAKEC,GAAG,IAAI;AACXR,MAAAA,OAAO,CAACQ,GAAG,CAACC,IAAJ,CAASC,KAAT,CAAeX,IAAhB,CAAP;AACAH,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX,CAHW,CAIX;AACH,KAVK,CAAN;AAYH,GAxBD;;AA0BA,SACI,mBACI,gCADJ,EAEI,iBAFJ,EAGI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,gBAA/B;AAAgD,IAAA,KAAK,EAAEH,QAAvD;AAAiE,IAAA,QAAQ,EAAES,KAAK,IAAIR,WAAW,CAACQ,KAAK,CAACO,MAAN,CAAaC,KAAd;AAA/F,IAHJ,EAII,iBAJJ,EAKI,iBALJ,EAMI,gCANJ,EAOI,iBAPJ,EAQI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,KAAK,EAAEf,QAA9B;AAAwC,IAAA,QAAQ,EAAEO,KAAK,IAAIN,WAAW,CAACM,KAAK,CAACO,MAAN,CAAaC,KAAd,CAAtE;AAA4F,IAAA,WAAW,EAAC;AAAxG,IARJ,EASI,iBATJ,EAUI,iBAVJ,EAWI;AAAG,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAAV,KAA6Bd,IAA7B,CAXJ,EAYI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEI;AAA/B,aAZJ,CADJ;AAgBH","sourcesContent":["import React, { useState } from 'react';\nimport Router from \"next/router\";\nimport { useMutation, gql } from '@apollo/client';\n\nexport default function Login() {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [mess, setMess] = useState('');\n    const LOGIN = gql`\n    mutation login($username: String, $password: String) {\n            login(user: {\n                        username: $username,\n                        password: $password\n                        }\n                )\n                         {\n    mess\n  }\n}\n    `\n    const [addTodo] = useMutation(LOGIN);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        // await axios.post('login', {\n        //     username: username,\n        //     password: password\n        // }).then(res => {\n        //     setMess(res.data);\n        //     Router.replace(\"/employees\");\n        // }).catch(rej => {\n        //     setMess('Wrong username or password, please check again!')\n        // });\n        // console.log(username, password, 'aaaaaa', addTodo());\n        await addTodo({\n            variables: {\n                username: username,\n                password: password\n            }\n        }).then(res => {\n            setMess(res.data.login.mess);\n            setUsername('');\n            setPassword('');\n            // Router.replace(\"/employees\");\n        })\n\n    }\n\n    return (\n        <div>\n            <label>Username</label>\n            <br />\n            <input type=\"text\" placeholder=\"Enter username\" value={username} onChange={event => setUsername(event.target.value)} />\n            <br />\n            <br />\n            <label>Password</label>\n            <br />\n            <input type=\"password\" value={password} onChange={event => setPassword(event.target.value)} placeholder=\"Enter password\" />\n            <br />\n            <br />\n            <p style={{ color: \"red\" }}>{mess}</p>\n            <button type=\"submit\" onClick={handleSubmit}>Login</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}