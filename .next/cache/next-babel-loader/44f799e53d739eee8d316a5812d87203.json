{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Router from \"next/router\";\nimport { useMutation, gql } from '@apollo/client';\nexport default function Login() {\n  const {\n    0: username,\n    1: setUsername\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: mess,\n    1: setMess\n  } = useState('');\n  let LOGIN = gql`\n    mutation login($username: String!, $password: String!) {\n            login(user: {\n                        username: $username,\n                        password: $password\n                        }\n                )\n                         {\n    mess\n  }\n}\n    `;\n  let [addTodo, {\n    data\n  }] = useMutation(LOGIN);\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // await axios.post('login', {\n    //     username: username,\n    //     password: password\n    // }).then(res => {\n    //     setMess(res.data);\n    //     Router.replace(\"/employees\");\n    // }).catch(rej => {\n    //     setMess('Wrong username or password, please check again!')\n    // });\n    // console.log(username, password, 'aaaaaa', addTodo());\n\n    addTodo({\n      variables: {\n        username: username,\n        password: password\n      }\n    });\n    console.log(addTodo());\n  };\n\n  return __jsx(\"div\", null, __jsx(\"label\", null, \"Username\"), __jsx(\"br\", null), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter username\",\n    value: username,\n    onChange: event => setUsername(event.target.value)\n  }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"label\", null, \"Password\"), __jsx(\"br\", null), __jsx(\"input\", {\n    type: \"password\",\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    placeholder: \"Enter password\"\n  }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"p\", {\n    style: {\n      color: \"red\"\n    }\n  }, mess), __jsx(\"button\", {\n    type: \"submit\",\n    onClick: handleSubmit\n  }, \"Login\"));\n}","map":{"version":3,"sources":["/home/hamsa/training/GraphQL-RennyKa/pages/login.js"],"names":["React","useState","axios","Router","useMutation","gql","Login","username","setUsername","password","setPassword","mess","setMess","LOGIN","addTodo","data","handleSubmit","event","preventDefault","variables","console","log","target","value","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAiC,gBAAjC;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC5B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACQ,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACU,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAIY,KAAK,GAAGR,GAAI;;;;;;;;;;;KAAhB;AAYA,MAAI,CAACS,OAAD,EAAU;AAAEC,IAAAA;AAAF,GAAV,IAAsBX,WAAW,CAACS,KAAD,CAArC;;AAEA,QAAMG,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACC,cAAN,GADkC,CAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAJ,IAAAA,OAAO,CAAC;AACJK,MAAAA,SAAS,EAAE;AACPZ,QAAAA,QAAQ,EAAEA,QADH;AAEPE,QAAAA,QAAQ,EAAEA;AAFH;AADP,KAAD,CAAP;AAMAW,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,EAAnB;AAGH,GArBD;;AAuBA,SACI,mBACI,gCADJ,EAEI,iBAFJ,EAGI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,gBAA/B;AAAgD,IAAA,KAAK,EAAEP,QAAvD;AAAiE,IAAA,QAAQ,EAAEU,KAAK,IAAIT,WAAW,CAACS,KAAK,CAACK,MAAN,CAAaC,KAAd;AAA/F,IAHJ,EAII,iBAJJ,EAKI,iBALJ,EAMI,gCANJ,EAOI,iBAPJ,EAQI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,KAAK,EAAEd,QAA9B;AAAwC,IAAA,QAAQ,EAAEQ,KAAK,IAAIP,WAAW,CAACO,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAtE;AAA4F,IAAA,WAAW,EAAC;AAAxG,IARJ,EASI,iBATJ,EAUI,iBAVJ,EAWI;AAAG,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAAV,KAA6Bb,IAA7B,CAXJ,EAYI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEK;AAA/B,aAZJ,CADJ;AAgBH","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Router from \"next/router\";\nimport { useMutation, gql } from '@apollo/client';\n\nexport default function Login() {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [mess, setMess] = useState('');\n    let LOGIN = gql`\n    mutation login($username: String!, $password: String!) {\n            login(user: {\n                        username: $username,\n                        password: $password\n                        }\n                )\n                         {\n    mess\n  }\n}\n    `\n    let [addTodo, { data }] = useMutation(LOGIN);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        // await axios.post('login', {\n        //     username: username,\n        //     password: password\n        // }).then(res => {\n        //     setMess(res.data);\n        //     Router.replace(\"/employees\");\n        // }).catch(rej => {\n        //     setMess('Wrong username or password, please check again!')\n        // });\n        // console.log(username, password, 'aaaaaa', addTodo());\n        addTodo({\n            variables: {\n                username: username,\n                password: password\n            }\n        });\n        console.log(addTodo(\n\n        ));\n    }\n\n    return (\n        <div>\n            <label>Username</label>\n            <br />\n            <input type=\"text\" placeholder=\"Enter username\" value={username} onChange={event => setUsername(event.target.value)} />\n            <br />\n            <br />\n            <label>Password</label>\n            <br />\n            <input type=\"password\" value={password} onChange={event => setPassword(event.target.value)} placeholder=\"Enter password\" />\n            <br />\n            <br />\n            <p style={{ color: \"red\" }}>{mess}</p>\n            <button type=\"submit\" onClick={handleSubmit}>Login</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}