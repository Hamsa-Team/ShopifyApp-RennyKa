{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport axios from 'axios';\n\nvar Employees = /*#__PURE__*/function (_React$Component) {\n  _inherits(Employees, _React$Component);\n\n  var _super = _createSuper(Employees);\n\n  function Employees(props) {\n    var _this;\n\n    _classCallCheck(this, Employees);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"crawlData\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var employees, res, newEmployees;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                employees = _this.state.employees;\n                _context.next = 4;\n                return axios.post('employees/crawl');\n\n              case 4:\n                res = _context.sent;\n                newEmployees = employees.concat(res.data);\n\n                _this.setState({\n                  employees: newEmployees\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      employees: _this.props.employees ? _this.props.employees : []\n    };\n    return _this;\n  }\n\n  _createClass(Employees, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(\"button\", {\n        onClick: this.crawlData\n      }, \"Crawl\"), __jsx(\"table\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Name\"), __jsx(\"th\", null, \"Age\"), __jsx(\"th\", null, \"Salary\")), this.state.employees ? this.state.employees.map(function (e, i) {\n        return __jsx(\"tr\", {\n          key: i\n        }, __jsx(\"td\", null, e.employee_name), __jsx(\"td\", null, e.employee_age), __jsx(\"td\", null, e.employee_salary));\n      }) : null));\n    }\n  }]);\n\n  return Employees;\n}(React.Component);\n\nexport var __N_SSP = true;\nexport default Employees;","map":{"version":3,"sources":["/home/hamsa/training/GraphQL-RennyKa/pages/employees.js"],"names":["React","axios","Employees","props","event","preventDefault","employees","state","post","res","newEmployees","concat","data","setState","crawlData","map","e","i","employee_name","employee_age","employee_salary","Component"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe;AAAA,0EAOP,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACRA,gBAAAA,KAAK,CAACC,cAAN;AACQC,gBAAAA,SAFA,GAEc,MAAKC,KAFnB,CAEAD,SAFA;AAAA;AAAA,uBAGUL,KAAK,CAACO,IAAN,CAAW,iBAAX,CAHV;;AAAA;AAGFC,gBAAAA,GAHE;AAIFC,gBAAAA,YAJE,GAIaJ,SAAS,CAACK,MAAV,CAAiBF,GAAG,CAACG,IAArB,CAJb;;AAKR,sBAAKC,QAAL,CAAc;AACVP,kBAAAA,SAAS,EAAEI;AADD,iBAAd;;AALQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAPO;;AAAA;AAAA;AAAA;AAAA;;AAEf,UAAKH,KAAL,GAAa;AACTD,MAAAA,SAAS,EAAE,MAAKH,KAAL,CAAWG,SAAX,GAAuB,MAAKH,KAAL,CAAWG,SAAlC,GAA8C;AADhD,KAAb;AAFe;AAKlB;;;;6BAYQ;AACL,aACI,4BACI;AAAQ,QAAA,OAAO,EAAE,KAAKQ;AAAtB,iBADJ,EAEI,qBACI,kBACI,yBADJ,EAEI,wBAFJ,EAGI,2BAHJ,CADJ,EAMK,KAAKP,KAAL,CAAWD,SAAX,GAAuB,KAAKC,KAAL,CAAWD,SAAX,CAAqBS,GAArB,CAAyB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACvD,eACI;AAAI,UAAA,GAAG,EAAEA;AAAT,WACI,kBAAKD,CAAC,CAACE,aAAP,CADJ,EAEI,kBAAKF,CAAC,CAACG,YAAP,CAFJ,EAGI,kBAAKH,CAAC,CAACI,eAAP,CAHJ,CADJ;AAOH,OARuB,CAAvB,GAQI,IAdT,CAFJ,CADJ;AAqBH;;;;EAxCmBpB,KAAK,CAACqB,S;;;AA2D9B,eAAenB,SAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass Employees extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            employees: this.props.employees ? this.props.employees : []\n        }\n    }\n\n    crawlData = async (event) => {\n        event.preventDefault();\n        const { employees } = this.state;\n        const res = await axios.post('employees/crawl');\n        const newEmployees = employees.concat(res.data);\n        this.setState({\n            employees: newEmployees\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <button onClick={this.crawlData}>Crawl</button>\n                <table>\n                    <tr>\n                        <th>Name</th>\n                        <th>Age</th>\n                        <th>Salary</th>\n                    </tr>\n                    {this.state.employees ? this.state.employees.map((e, i) => {\n                        return (\n                            <tr key={i}>\n                                <td>{e.employee_name}</td>\n                                <td>{e.employee_age}</td>\n                                <td>{e.employee_salary}</td>\n                            </tr>\n                        )\n                    }) : null}\n                </table>\n            </>\n        )\n    }\n}\n\nexport async function getServerSideProps(ctx) {\n    if (ctx.req.session) {\n        const res = await axios.get('http://localhost:3000/api/employees');\n        return {\n            props: {\n                employees: res.data\n            },\n        }\n    }\n    else {\n        ctx.res.writeHead(301, {\n            Location: \"/login\",\n        });\n        ctx.res.end();\n    }\n}\nexport default Employees"]},"metadata":{},"sourceType":"module"}