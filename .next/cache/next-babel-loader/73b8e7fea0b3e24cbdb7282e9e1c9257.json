{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from 'next/app'; // import { ApolloClient, InMemoryCache } from '@apollo/client';\n\nimport React from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport { AppProvider } from '@shopify/polaris';\nimport '@shopify/polaris/dist/styles.css';\nimport { Provider } from '@shopify/app-bridge-react';\nimport translations from '@shopify/polaris/locales/en.json';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nvar client = new ApolloClient({\n  uri: 'http://localhost:3000/graphql',\n  // cache: new InMemoryCache(),\n  fetchOptions: {\n    credentials: 'include'\n  }\n});\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          pageProps = _this$props.pageProps,\n          Component = _this$props.Component;\n      var config = {\n        apiKey: API_KEY,\n        shopOrigin: Cookies.get(\"shopOrigin\"),\n        forceRedirect: true\n      };\n      return __jsx(Provider, {\n        config: config\n      }, __jsx(AppProvider, {\n        i18n: translations\n      }, __jsx(ApolloProvider, {\n        client: client\n      }, __jsx(Component, pageProps))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":{"version":3,"sources":["/home/hamsa/training/GraphQL-RennyKa/pages/_app.js"],"names":["App","React","ApolloProvider","AppProvider","Provider","translations","Cookies","ApolloClient","client","uri","fetchOptions","credentials","MyApp","props","pageProps","Component","config","apiKey","API_KEY","shopOrigin","get","forceRedirect"],"mappings":";;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,kCAAP;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,IAAMC,MAAM,GAAG,IAAID,YAAJ,CAAiB;AAC5BE,EAAAA,GAAG,EAAE,+BADuB;AAE5B;AACAC,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAE;AADH;AAHc,CAAjB,CAAf;;IAQMC,K;;;;;;;;;;;;;6BACO;AAAA,wBAC4B,KAAKC,KADjC;AAAA,UACGC,SADH,eACGA,SADH;AAAA,UACcC,SADd,eACcA,SADd;AAEL,UAAMC,MAAM,GAAG;AAAEC,QAAAA,MAAM,EAAEC,OAAV;AAAmBC,QAAAA,UAAU,EAAEb,OAAO,CAACc,GAAR,CAAY,YAAZ,CAA/B;AAA0DC,QAAAA,aAAa,EAAE;AAAzE,OAAf;AACA,aACI,MAAC,QAAD;AAAU,QAAA,MAAM,EAAEL;AAAlB,SACI,MAAC,WAAD;AAAa,QAAA,IAAI,EAAEX;AAAnB,SACI,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAEG;AAAxB,SACI,MAAC,SAAD,EAAeM,SAAf,CADJ,CADJ,CADJ,CADJ;AASH;;;;EAbed,G;;AAgBpB,eAAeY,KAAf","sourcesContent":["import App from 'next/app';\n// import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport React from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport { AppProvider } from '@shopify/polaris';\nimport '@shopify/polaris/dist/styles.css';\nimport { Provider } from '@shopify/app-bridge-react';\nimport translations from '@shopify/polaris/locales/en.json';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nconst client = new ApolloClient({\n    uri: 'http://localhost:3000/graphql',\n    // cache: new InMemoryCache(),\n    fetchOptions: {\n        credentials: 'include'\n    },\n});\n\nclass MyApp extends App {\n    render() {\n        const { pageProps, Component } = this.props\n        const config = { apiKey: API_KEY, shopOrigin: Cookies.get(\"shopOrigin\"), forceRedirect: true };\n        return (\n            <Provider config={config}>\n                <AppProvider i18n={translations}>\n                    <ApolloProvider client={client} >\n                        <Component {...pageProps} />\n                    </ApolloProvider>\n                </AppProvider>\n            </Provider>\n        );\n    }\n}\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}