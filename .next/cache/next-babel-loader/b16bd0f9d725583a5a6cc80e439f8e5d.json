{"ast":null,"code":"var __jsx = React.createElement;\nimport App from 'next/app';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { gql } from '@apollo/client';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { ApolloProvider } from '@apollo/client';\nconst client = new ApolloClient({\n  uri: 'http://localhost:3000',\n  cache: new InMemoryCache()\n});\nclient.query({\n  query: gql`\n      query GetRates {\n        rates(currency: \"USD\") {\n          currency\n        }\n      }\n    `\n}).then(result => console.log(result));\nconsole.log(client);\n\nclass MyApp extends App() {\n  render() {\n    return __jsx(ApolloProvider, {\n      client: client\n    }, __jsx(\"div\", null, __jsx(\"h2\", null, \"My first Apollo app \\uD83D\\uDE80\")));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/home/hamsa/training/GraphQL-RennyKa/pages/_app.js"],"names":["App","ApolloClient","InMemoryCache","gql","React","render","ApolloProvider","client","uri","cache","query","then","result","console","log","MyApp"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,MAAMC,MAAM,GAAG,IAAIN,YAAJ,CAAiB;AAC5BO,EAAAA,GAAG,EAAE,uBADuB;AAE5BC,EAAAA,KAAK,EAAE,IAAIP,aAAJ;AAFqB,CAAjB,CAAf;AAKAK,MAAM,CACDG,KADL,CACW;AACHA,EAAAA,KAAK,EAAEP,GAAI;;;;;;;AADR,CADX,EAUKQ,IAVL,CAUUC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAVpB;AAWAC,OAAO,CAACC,GAAR,CAAYP,MAAZ;;AACA,MAAMQ,KAAN,SAAoBf,GAAG,EAAvB,CAA0B;AACtBK,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAEE;AAAxB,OACI,mBACI,qDADJ,CADJ,CADJ;AAOH;;AATqB;;AAY1B,eAAeQ,KAAf","sourcesContent":["import App from 'next/app';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { gql } from '@apollo/client';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { ApolloProvider } from '@apollo/client';\n\nconst client = new ApolloClient({\n    uri: 'http://localhost:3000',\n    cache: new InMemoryCache()\n});\n\nclient\n    .query({\n        query: gql`\n      query GetRates {\n        rates(currency: \"USD\") {\n          currency\n        }\n      }\n    `\n    })\n    .then(result => console.log(result));\nconsole.log(client);\nclass MyApp extends App() {\n    render() {\n        return (\n            <ApolloProvider client={client} >\n                <div>\n                    <h2>My first Apollo app ðŸš€</h2>\n                </div>\n            </ApolloProvider>\n        );\n    }\n}\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}