{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from 'next/app';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { gql } from '@apollo/client';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { ApolloProvider } from '@apollo/client';\nvar client = new ApolloClient({\n  uri: 'http://localhost:3000/graphql',\n  cache: new InMemoryCache()\n});\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          pageProps = _this$props.pageProps,\n          Component = _this$props.Component;\n      return __jsx(ApolloProvider, {\n        client: client\n      }, __jsx(Component, pageProps));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":{"version":3,"sources":["/home/hamsa/training/GraphQL-RennyKa/pages/_app.js"],"names":["App","ApolloClient","InMemoryCache","gql","React","Component","render","ApolloProvider","client","uri","cache","MyApp","props","pageProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,IAAMC,MAAM,GAAG,IAAIP,YAAJ,CAAiB;AAC5BQ,EAAAA,GAAG,EAAE,+BADuB;AAE5BC,EAAAA,KAAK,EAAE,IAAIR,aAAJ;AAFqB,CAAjB,CAAf;;IAKMS,K;;;;;;;;;;;;;6BACO;AAAA,wBAC4B,KAAKC,KADjC;AAAA,UACGC,SADH,eACGA,SADH;AAAA,UACcR,SADd,eACcA,SADd;AAEL,aACI,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAEG;AAAxB,SACI,MAAC,SAAD,EAAeK,SAAf,CADJ,CADJ;AAKH;;;;EAReb,G;;AAWpB,eAAeW,KAAf","sourcesContent":["import App from 'next/app';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { gql } from '@apollo/client';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { ApolloProvider } from '@apollo/client';\n\nconst client = new ApolloClient({\n    uri: 'http://localhost:3000/graphql',\n    cache: new InMemoryCache()\n});\n\nclass MyApp extends App {\n    render() {\n        const { pageProps, Component } = this.props\n        return (\n            <ApolloProvider client={client} >\n                <Component {...pageProps} />\n            </ApolloProvider>\n        );\n    }\n}\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}