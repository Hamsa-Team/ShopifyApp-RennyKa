{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport axios from 'axios';\nconst GET_EMPLOYEES = `\nquery getEmployees {\n    employees{\n      employee_name\n      employee_age\n      employee_salary\n    }\n  }`;\n\nclass Employees extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"crawlData\", async event => {\n      event.preventDefault();\n      const {\n        employees\n      } = this.state;\n      const res = await axios.post('employees/crawl');\n      const newEmployees = employees.concat(res.data);\n      this.setState({\n        employees: newEmployees\n      });\n    });\n\n    this.state = {\n      employees: this.props.employees ? this.props.employees : []\n    };\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(\"button\", {\n      onClick: this.crawlData\n    }, \"Crawl\"), __jsx(\"table\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Name\"), __jsx(\"th\", null, \"Age\"), __jsx(\"th\", null, \"Salary\")), this.state.employees ? this.state.employees.map((e, i) => {\n      return __jsx(\"tr\", {\n        key: i\n      }, __jsx(\"td\", null, e.employee_name), __jsx(\"td\", null, e.employee_age), __jsx(\"td\", null, e.employee_salary));\n    }) : null));\n  }\n\n}\n\nexport async function getServerSideProps(ctx) {\n  await axios({\n    url: 'http://localhost:3000/graphql',\n    method: 'get',\n    data: {\n      query: GET_EMPLOYEES\n    }\n  }).then(res => {\n    console.log(res.data);\n  }).catch(err => console.log(err));\n  return {\n    props: {\n      employees: res.data\n    }\n  };\n}\nexport default Employees;","map":{"version":3,"sources":["/home/hamsa/training/GraphQL-RennyKa/pages/employees.js"],"names":["React","axios","GET_EMPLOYEES","Employees","Component","constructor","props","event","preventDefault","employees","state","res","post","newEmployees","concat","data","setState","render","crawlData","map","e","i","employee_name","employee_age","employee_salary","getServerSideProps","ctx","url","method","query","then","console","log","catch","err"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAI;;;;;;;IAAvB;;AASA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,uCAOP,MAAOC,KAAP,IAAiB;AACzBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAKC,KAA3B;AACA,YAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,iBAAX,CAAlB;AACA,YAAMC,YAAY,GAAGJ,SAAS,CAACK,MAAV,CAAiBH,GAAG,CAACI,IAArB,CAArB;AACA,WAAKC,QAAL,CAAc;AACVP,QAAAA,SAAS,EAAEI;AADD,OAAd;AAGH,KAfkB;;AAEf,SAAKH,KAAL,GAAa;AACTD,MAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG,SAAX,GAAuB,KAAKH,KAAL,CAAWG,SAAlC,GAA8C;AADhD,KAAb;AAGH;;AAYDQ,EAAAA,MAAM,GAAG;AACL,WACI,4BACI;AAAQ,MAAA,OAAO,EAAE,KAAKC;AAAtB,eADJ,EAEI,qBACI,kBACI,yBADJ,EAEI,wBAFJ,EAGI,2BAHJ,CADJ,EAMK,KAAKR,KAAL,CAAWD,SAAX,GAAuB,KAAKC,KAAL,CAAWD,SAAX,CAAqBU,GAArB,CAAyB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACvD,aACI;AAAI,QAAA,GAAG,EAAEA;AAAT,SACI,kBAAKD,CAAC,CAACE,aAAP,CADJ,EAEI,kBAAKF,CAAC,CAACG,YAAP,CAFJ,EAGI,kBAAKH,CAAC,CAACI,eAAP,CAHJ,CADJ;AAOH,KARuB,CAAvB,GAQI,IAdT,CAFJ,CADJ;AAqBH;;AAxCmC;;AA2CxC,OAAO,eAAeC,kBAAf,CAAkCC,GAAlC,EAAuC;AAC1C,QAAMzB,KAAK,CAAC;AACR0B,IAAAA,GAAG,EAAE,+BADG;AAERC,IAAAA,MAAM,EAAE,KAFA;AAGRb,IAAAA,IAAI,EAAE;AACFc,MAAAA,KAAK,EAAE3B;AADL;AAHE,GAAD,CAAL,CAMH4B,IANG,CAMEnB,GAAG,IAAI;AACXoB,IAAAA,OAAO,CAACC,GAAR,CAAYrB,GAAG,CAACI,IAAhB;AACH,GARK,EAQHkB,KARG,CAQGC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CARV,CAAN;AASA,SAAO;AACH5B,IAAAA,KAAK,EAAE;AACHG,MAAAA,SAAS,EAAEE,GAAG,CAACI;AADZ;AADJ,GAAP;AAKH;AACD,eAAeZ,SAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nconst GET_EMPLOYEES = `\nquery getEmployees {\n    employees{\n      employee_name\n      employee_age\n      employee_salary\n    }\n  }`\n\nclass Employees extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            employees: this.props.employees ? this.props.employees : []\n        }\n    }\n\n    crawlData = async (event) => {\n        event.preventDefault();\n        const { employees } = this.state;\n        const res = await axios.post('employees/crawl');\n        const newEmployees = employees.concat(res.data);\n        this.setState({\n            employees: newEmployees\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <button onClick={this.crawlData}>Crawl</button>\n                <table>\n                    <tr>\n                        <th>Name</th>\n                        <th>Age</th>\n                        <th>Salary</th>\n                    </tr>\n                    {this.state.employees ? this.state.employees.map((e, i) => {\n                        return (\n                            <tr key={i}>\n                                <td>{e.employee_name}</td>\n                                <td>{e.employee_age}</td>\n                                <td>{e.employee_salary}</td>\n                            </tr>\n                        )\n                    }) : null}\n                </table>\n            </>\n        )\n    }\n}\n\nexport async function getServerSideProps(ctx) {\n    await axios({\n        url: 'http://localhost:3000/graphql',\n        method: 'get',\n        data: {\n            query: GET_EMPLOYEES\n        }\n    }).then(res => {\n        console.log(res.data);\n    }).catch(err => console.log(err))\n    return {\n        props: {\n            employees: res.data\n        },\n    }\n}\nexport default Employees"]},"metadata":{},"sourceType":"module"}