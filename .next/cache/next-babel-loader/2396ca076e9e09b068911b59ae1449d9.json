{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      query GetRates {\\n        rates(currency: \\\"USD\\\") {\\n          currency\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport App from 'next/app';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { gql } from '@apollo/client';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { ApolloProvider } from '@apollo/client';\nvar client = new ApolloClient({\n  uri: 'https://48p1r2roz4.sse.codesandbox.io',\n  cache: new InMemoryCache()\n});\nclient.query({\n  query: gql(_templateObject())\n}).then(function (result) {\n  return console.log(result);\n});\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(ApolloProvider, {\n        client: client\n      }, __jsx(\"div\", null, __jsx(\"h2\", null, \"My first Apollo app \\uD83D\\uDE80\")));\n    }\n  }]);\n\n  return MyApp;\n}(App());\n\nrender(__jsx(App, null), document.getElementById('root'));\nexport default MyApp;","map":{"version":3,"sources":["/home/hamsa/training/GraphQL-RennyKa/pages/_app.js"],"names":["App","ApolloClient","InMemoryCache","gql","React","render","ApolloProvider","client","uri","cache","query","then","result","console","log","MyApp","document","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,IAAMC,MAAM,GAAG,IAAIN,YAAJ,CAAiB;AAC5BO,EAAAA,GAAG,EAAE,uCADuB;AAE5BC,EAAAA,KAAK,EAAE,IAAIP,aAAJ;AAFqB,CAAjB,CAAf;AAKAK,MAAM,CACDG,KADL,CACW;AACHA,EAAAA,KAAK,EAAEP,GAAF;AADF,CADX,EAUKQ,IAVL,CAUU,UAAAC,MAAM;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAJ;AAAA,CAVhB;;IAYMG,K;;;;;;;;;;;;;6BACO;AACL,aACI,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAER;AAAxB,SACI,mBACI,qDADJ,CADJ,CADJ;AAOH;;;;EATeP,GAAG,E;;AAYvBK,MAAM,CAAC,MAAC,GAAD,OAAD,EAAUW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAV,CAAN;AAEA,eAAeF,KAAf","sourcesContent":["import App from 'next/app';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { gql } from '@apollo/client';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { ApolloProvider } from '@apollo/client';\n\nconst client = new ApolloClient({\n    uri: 'https://48p1r2roz4.sse.codesandbox.io',\n    cache: new InMemoryCache()\n});\n\nclient\n    .query({\n        query: gql`\n      query GetRates {\n        rates(currency: \"USD\") {\n          currency\n        }\n      }\n    `\n    })\n    .then(result => console.log(result));\n\nclass MyApp extends App() {\n    render() {\n        return (\n            <ApolloProvider client={client} >\n                <div>\n                    <h2>My first Apollo app ðŸš€</h2>\n                </div>\n            </ApolloProvider>\n        );\n    }\n}\n\nrender(<App />, document.getElementById('root'));\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}